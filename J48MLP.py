import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn import metrics

col_names = ['Down/Up Ratio', 'Src Port', 'Dst Port', 'FIN Flag Cnt', 'Fwd Pkt Len Mean', 'Fwd Seg Size Avg', 'Subflow Fwd Byte', 'TotLen Fwd Pkts', 'Flow Byte/s', 'Fwd Pkt Len Max', 'Fwd Pkt Len Std', 'Pkt Size Avg', 'Pkt Len Mean', 'Bwd Pkt/s', 'Flow Pkt/s', 'label']

pima = pd.read_csv("Sample_pcap_Flow.csv", header=None, names=col_names)
pima = pima.iloc[1:]
pima.head()

feature_cols = ['Down/Up Ratio', 'Src Port', 'Dst Port', 'FIN Flag Cnt', 'Fwd Pkt Len Mean', 'Fwd Seg Size Avg', 'Subflow Fwd Byte', 'TotLen Fwd Pkts', 'Flow Byte/s', 'Fwd Pkt Len Max', 'Fwd Pkt Len Std', 'Pkt Size Avg', 'Pkt Len Mean', 'Bwd Pkt/s', 'Flow Pkt/s']

X = pima[feature_cols]
Y = pima.label

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size =0.2, random_state=1)

clf = DecisionTreeClassifier()
clf = clf.fit(X_train, Y_train)

Y_pred = clf.predict(X_test)
accuracy = metrics.accuracy_score(Y_test, Y_pred)
accuracyPercent = accuracy*100

print("Accuracy:", accuracyPercent, "%")
print("Confusion Matrix:")
print(pd.crosstab(Y_test, Y_pred, rownames=['Actual Results'], colnames=['Predicted Results']))
